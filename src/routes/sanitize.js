import _ from 'lodash';
import { isExtrictedObject } from '../helpers/object';

export function sanitizeToCreate(model, values) {
  if (!isExtrictedObject(values)) return values;
  Object.keys(values)
    .filter(field => Array.isArray(values[field]))
    .forEach((field) => {
      const assocModel = model.associations[field].target;
      values[field] = values[field].map(assocVals => sanitizeToCreate(assocModel, assocVals));
    });

  Object.keys(values)
    .filter(field => isExtrictedObject(values[field]))
    .forEach((field) => {
      const assocModel = model.associations[field].target;
      values[field] = sanitizeToCreate(assocModel, values[field]);
    });
  return _.omit(values, model.autoGeneratedFields());
}

export function sanitizeToUpdate(model, values) {
  if (!isExtrictedObject(values)) return values;
  Object.keys(values)
    .filter(field => Array.isArray(values[field]))
    .forEach((field) => {
      const assocModel = model.associations[field].target;
      values[field] = values[field].map(assocVals => sanitizeToUpdate(assocModel, assocVals));
    });

  Object.keys(values)
    .filter(field => isExtrictedObject(values[field]))
    .forEach((field) => {
      const assocModel = model.associations[field].target;
      values[field] = sanitizeToUpdate(assocModel, values[field]);
    });
  return _.omit(values, [...model.unupdateFields(), 'createdAt', 'updatedAt', 'deletedAt']);
}
